%Confluence for multistep parallel reduction
inductive conf_prop : (g:ctx) [g |- term] -> [g |- term] -> ctype =
| conf_result : mstep_pred [g |- M'] [g |- N] -> mstep_pred [g |- M''] [g |- N]
                -> conf_prop [g |- M'] [g |- M'']
;

rec conf : (g:ctx) mstep_pred [g |- M] [g |- M'] -> mstep_pred [g |- M] [g |- M'']
                  -> conf_prop [g |- M'] [g |- M''] =
/ total d (conf _ _ _ _ d _) /
fn d => fn s => case d of
| id => conf_result s id
| step d1 d2 => let strip_result d1' d2' = strip d1 s in
                       let conf_result s1 s2 = conf d2 d1' in
                       conf_result s1 (step d2' s2)
;
