%Parallel reduction for STLC
LF pred : tm A -> tm A -> type =
| beta : ({x:tm A} pred x x -> pred (M1 x) (M1' x)) -> pred M2 M2'
         -> pred (app (abs M1) M2) (M1' M2')
| lm : ({x:tm A} pred x x -> pred (M x) (M' x))
       -> pred (abs M) (abs M')
| ap : pred M1 M1' -> pred M2 M2'
       -> pred (app M1 M2) (app M1' M2')
;

schema pctx = some [a:ty] block(x:tm a, v:pred x x);

%Not abstraction judgement
LF notabs : tm A -> type =
| nl_app : notabs (app _ _)
;

schema nctx = some [a:ty] block(x:tm a, v: notabs x);

%Complete development
LF cd : tm A -> tm A -> type =
| cd_beta : ({x:tm A} notabs x -> cd x x -> cd (M x) (M' x)) -> cd N N'
            -> cd (app (abs M) N) (M' N')
| cd_ap : notabs M1 -> cd M1 M1' -> cd M2 M2'
          -> cd (app M1 M2) (app M1' M2')
| cd_lm : ({x:tm A} notabs x -> cd x x -> cd (M x) (M' x))
          -> cd (abs M) (abs M')
;

schema cctx = some [a:ty] block(x:tm a, u: notabs x, v: cd x x);
schema pcctx = some [a:ty] block(x:tm a, w: pred x x, u: notabs x, v: cd x x);
